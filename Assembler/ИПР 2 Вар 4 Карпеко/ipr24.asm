;masm
model small  ; модель памяти small              
.stack 100h  ; под стек отвели 256 байт 
.data        ; сегмент данных (упрощенная директива сегментации)
len equ 10            ;количество элементов в массиве mas
mas db 5, 1, 0, 3, 2, 0, 7, 0, 9, 0   ; задаем элементы массива
mas1 db 'Massiv: 5, 1, 0, 3, 2, 0, 7, 0, 9, 0.  $' ; строка вывода на экра
Mess db 'Kolichestvo elementov ne= 0: $' ; строка вывода на экра
rez db (?) ;res – переменная (счетчик - кол-во элементов = 0)
.code      ; начало сегмента кода 
start:     ; метка. начало программы
	mov ax, @data   ; занесение адреса сегмента данных в регистр ax. 
	mov ds, ax      ; копируем содержимое регистра ax в регистр ds, напрямую	     
       		         ; загрузить инфу в ds нельзя, можно из режимов адресации
	mov cx, len      ; количество элементов массива - в cx = 10
	xor ax, ax       ; в ax будем накапливать сумму??? обнулили ах
	xor si, si       ; регистр si - индекс i,  нумерация с 0
cycl: cmp mas[si], 0   ; сравнить очередной элемент mas с 0
	  je m1           ; если = 0,  то на метку m1
	  inc al      ; если не = 0, то  al +1,  al - счетчик нулевых эл-ов
 m1:  inc si         ;перейти к следующему элементу i:=i+1
loop cycl          ; команда организации цикла loop - цикл прошел 1 раз. всего 
					; пройдет сх раз (10). в конце цикла счетчик - в al 
mov  rez, al      ; заносим результат с al  в переменную rez
;----- вывод на экран:
mov ah, 09h	         ; в регистре ah хранят функцию вывода строки (09h)
mov dx, offset mas1  ; в dx поместили смещение mas1 (строка сообщения) для ее вывода на экран 
int 21h              ; вызываем прерывание ОС DOS, идёт вывод строки текста 
mov dx, offset Mess  ; вывод строки текста Mess
int 21h              ; вызываем прерывание ОС DOS, идёт вывод строки текста 
mov ah, 02h         ; вывод на консоль имеет свой адрес, на него с помощью
					; mov отправляется байт для отображения. 
mov dl, rez         ; поместили результат в переменной rez в dl для вывода на экран 
or dl, 30h          ; коррекция ascii
int 21h		        ; вызываем прерывание ОС DOS, идёт вывод строки текста 
mov ax, 4ch         ; функция 4ch означает завершение работы  программы и возврат
					; в систему DOS (корректный выход из программы в DOS)
int 21h             ; выход из программы и возврат управления операционной системе
end start           ; конец программы (закрыть программу).
