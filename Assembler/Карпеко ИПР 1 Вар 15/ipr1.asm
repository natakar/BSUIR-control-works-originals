.model small                    ; модель памяти small              
.386                                  ; режим работы микропроцессора   
.stack 100h                       ; под стек отвели 256 байт          
 .data                                 ; сегмент данных
MesVvodStr db 'Vvedite stroku: $'             ; определение строки текста, символ 
					; ‘$’ – признак конца печати при выводе на экран 

MesBolsheC db 'Bolshe simvolov "c"', 0dh, 0ah, '$'    ; определение строки текста, 
					          ; 0dh, 0ah - возврат каретки/перевод строки
MesBolsheD db 'Bolshe simvolov "d"', 0dh, 0ah, '$'      ; определение строки текста
MesRavno db 'Kolichestvo simvolov "c" i "d" ravno', 0dh,0ah, '$'  ; определение 
								                           ; строки текста
Stroka db 10 dup ('$')               ; отводим место под строку из 10-и однобайтных
         ; элементов, которые инициализируем символом '$'
LenStroka  dw  $-Stroka-1       ; длина исходной строки
.code                                         ; сегмент кода                
BEGIN:                                  ; метка начала программы      
    mov ax, @data                    ; занесение в регистр ах сегментной компоненты 
				        ; адреса сегмента данных
    mov ds, ax                           ; копирование содержимого регистра ах в регистр ds
    push ds                                ; занесение в стек содержимого регистра ds
    pop es                                  ; извлечение из стека содержимого в регистр es
                  ; (настраиваем регистр es на сегмент данных)
    mov ah, 09h                        ; 09h – функция вывода исходных данных 
    lea dx, MesVvodStr            ; занесение в dx смещение переменной MesVvodStr
    int 21h                                 ; вызов прерывания для вывода строки
    lea di, Stroka       ; занесение в индекс приемника смещения переменной Stroka 
  ; (получение эффективного адреса первого элемента строки)
    mov cx, LenStroka      ; занесение в сх (счетчик) длины строки (к-во символов)
    m1:                              ; метка, начало цикла ввода символов с клавиатуры
      mov ah, 01h              ; занесение в регистр ah символов из буфера клавиатуры              
      int 21h                       ; прерывание для ввода с клавиатуры с эхопечатью
      cmp al, 0Dh               ;в al - символ, полученный при вводе - проверяем 
			           ; нажатие Enter
      je prov                        ;если есть равенство, переходим на метку prov
      stosb                        ; сохранение полученных элементов строки 
; stosb  				; занесение значения al в строку str1 
    loop m1                      ; конец цикла m1

     prov:                         ; метка, начало сравнения полученных символов
    xor bx, bx                  ; обнуление регистра bx: в bl будет накапливаться 
			        ; счетчик символа «d», в bh – счетчик символа «с»
    xor si, si                     ; обнуление регистра si – индекс символов, нумерация с 0
    mov cx, LenStroka   ; в сх (счетчик) заносится длина строки
    go1:                           ; метка, начало цикла подсчета в строке символа «с»  
        cmp Stroka[si], 'c'  ; сравнение очередного символа строки с символом «с»
        jne go2                  ; если символы не совпали, переход на метку go2
        inc bh                    ; иначе (символы совпали) в регистре bh накапливается 
		                 ; счетчик количества символов «с»
        go2:                      ; метка перехода если символы не совпали
        inc si                    ; переход к следующему элементу i = i + 1
    loop go1        ; конец цикла go1

    ; такой же цикл выполняется для подсчета символа «d»
    xor si, si                        ; обнуление регистр si для прохода с первого элемента
    mov cx, LenStroka         ; в сх (счетчик) заносится длина строки
    go3:                                ; метка, начало цикла подсчета в строке символа «d»
        cmp Stroka[si], 'd'      ; сравнение очередного символа строки с символом «d»
        jne go4                       ; если символы не совпали, переход на метку go4      
        inc bl                          ; иначе (символы совпали) в регистре bl накапливается 
		                      ; счетчик количества символов «d»
        go4:                           ; метка перехода если символы не совпали 
        inc si                          ; переходим к следующему элементу i = i + 1
    loop go3           ; конец цикла поиска символа «d» 

  ; 3 варианта сравнения символов «c» и «d»: «c» > «d», «c» = «d», и «c» < «d»
    cmp bh, bl                   ; сравнение полученного количества символов «c» и «d»
    jg bolsheC                          ; если «c» > «d», то переход на метку bolsheC    
    jz CRavoD                        ;  иначе если «c» = «d», то переход на метку CRavoD    
    
   lea dx, MesBolsheD    ; иначе («c» < «d») занесение в dx смещения переменной
; MesBolsheD        
    jmp print                     ; безусловный переход на метку вывода результата print 
    
    bolsheC:                        ; метка если «c» > «d»
    lea dx, MesBolsheC      ; занесение в dx смещения переменной MesBolsheC       
    jmp print                       ; безусловный переход на метку вывода результата print
    
    CRavoD:                       ; метка если «c» = «d» 
    lea dx, MesRavno         ; занесение в dx смещения переменной MesRavno 
  
    print:                         ; метка, вывод результата на экран 
    mov ah, 09h              ; в систему DOS             
    int 21h                      ; прерывание DOS, вывод строки
    
    mov ah, 4Ch            ; функция 4Ch – завершение работы программы и возврат
		                ; в систему DOS             
    int 21h                     ; выход из программы             
end BEGIN                 ; конец программы, установка стартовой метки.

