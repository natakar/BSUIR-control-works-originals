.model small
.stack 256
.data
mas db 7, 5, -5, 2, 3, -8, 1, -9, -6;
Len = $ - mas          ;размер массива в байтах ; num = Len
MSG1 db 'Massiv: 7, 5, -5, 2, 3, -8, 1, -9, -6.', 0dh, 0ah, '$'   ;сообщение о 
; содержимом исходного массива, oah, 0dh – содержимое 
; MSG1 будет выведено с новой строки
BR db 10, 13, '$'
MSG2 db 'Kol-vo zamen otricatelnych chisel na 0 = $' ; сообщение о замене
                                                                  ; отрицательных чисел
Count db  0                     ; счетчику замен присвоили начальное значение 0
.code                               ; начало сегмента кода
START:                          ; начало программы
mov ax, @data                ; заносим данные в ах, далее
mov ds, ax                      ; копирование содержимого регистра ax в регистр ds
lea bx, mas                       ; загружаем в bx адрес первого элемента
mov cx, Len                     ; в сх будет находиться счетчик цикла
Zamena:                           ; метка начала цикла обработки элементов массива
cmp byte ptr [bx], 0         ; сравниваем элемент с нулем
jg Poloziteln                     ; если bx больше и не равен 0 (положительное число), то 
           ; переходим на метку Poloziteln
mov byte ptr[bx], 0          ; иначе, делаем замену отрицательного числа на ноль
 inc Count                         ; считаем количество таких замен 
Poloziteln:                        ;если не отрицательное
inc bx                               ; переход к следующему элементу 
loop Zamena                    ; конец цикла, переход на метку Zamena
mov ah, 09h                     ; начитаем вывод количества замен
lea dx, MSG1                     ; выводим сообщение MSG1
int 21h  
lea dx, BR                    ; выводим сообщение MSG1
int 21h 
lea dx, MSG2                     ; выводим сообщение MSG2
int 21h                              ; прерывание для вывода на экран

mov al, Count                  ; заносим данные счетчика в регистр al
aam                              ; двоичное число преобразуем в неупакованное BCD число 
or ax, 3030h                ; преобразуем в символы ASCII
xchg al, ah                   ; меняем местами 
int 21h                         ; выводим число на экран
mov al, ah
int 29h                        
int 21h                          ; прерывание программы
mov ah, 4Ch                ; функция 4ch - завершение работы  программы и возврат 
			        ; в систему DOS
int 21h         
end START               ; конец программы



